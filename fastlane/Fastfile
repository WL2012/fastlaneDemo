# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

    lane :test_comand do |options|
      p "#{options}"
      if options == nil
        p "test_comand success"
        return
      end
      
      if Float([:a]) > 100
        p "大于100"
      else
        p "小于100"
      end
      p "test_comand success"
    end

  	desc "Description of what the lane does"

    lane :uiretest do |options|
      scheme_to_test = "BMWUITests"
      scan_options = {
        scheme: scheme_to_test,
        device: 'iPhone 7',
        output_types: 'junit',
        output_directory: 'test-reports',
        custom_report_file_name: 'BMWUIReport.xml'
      }
      begin
        retry_count ||= 0
        scan(scan_options)
      rescue => e
        UI.important("failure noted: #{e}")
        report_filepath = File.absolute_path('../test-reports/BMWUIReport.xml')
        unless File.exist?(report_filepath)
          raise e
        end
        if (retry_count += 1) < 3
          setup_fragile_tests_for_rescan(
            project_path: File.absolute_path('../BMWOne/BMWOne.xcodeproj'),
            scheme: scheme_to_test,
            report_filepath: report_filepath
          )
          clear_derived_data
          reset_simulator_contents if retry_count > 1
          retry
        end
      end
    end

    lane :beta do
      increment_build_number
      match(
      	  git_url: "https://gitee.com/wang1990.com/iosProvingProfile.git",
      	  type: "development" ,#can be appstore,adhoc, development,enterprise
      	  app_identifier:"com.youhong.fastlaneDemo",
      	  username:"283175161@qq.com",
      	  readonly: true
    	)
      #编译代码
      gym(
          scheme:"fastlaneDemo",
          export_method:"development",
          output_directory:"./build",
          archive_path:"./Archive",       
    	)
      firim(firim_api_token: "ed1421ff86837b720a7053684b934147")
      tests
  	end

    lane :release do
  	  #增加build版本号
      increment_build_number
      match(
          git_url: "https://gitee.com/wang1990.com/iosProvingProfile.git",
          type: "appstore" ,#can be appstore,adhoc, development,enterprise
          app_identifier:"com.youhong.fastlaneDemo",
          username:"283175161@qq.com",
          readonly: true
    	)
      #编译代码
      gym(
          scheme:"fastlaneDemo",
          export_method:"app-store"
    	)
      #发布到Apple Store
      deliver(
          username:"283175161@qq.com",
          skip_screenshots:true,
          force:true,
          submit_for_review:true,
    	)
  	end

    #添加测试Unit Test 
    lane :tests do
      run_tests(scheme: "fastlaneDemoTests")
    end

    desc "use xcode for Unit Test"
    lane :test_xcodebuild do |options|
      
      puts "options: #{options}"
      destination = "platform=iOS Simulator,name=iPhone 8 Plus,OS=11.2"
      if Float(options[:xcode]) > 9.2 
          destination = "platform=iOS Simulator,name=iPhone 8 Plus,OS=12.1"
      end

      puts "---start xcodebuild---------------"
      UI.message("start xcodebuild")
      xcodebuild(
          test: true, 
          scheme: "fastlaneDemo", 
          workspace: "fastlaneDemo.xcworkspace",
          destination: "platform=iOS Simulator,name=iPhone 8 Plus,OS=11.2"
      )
      UI.message("success xcodebuild")
      puts "---success xcodebuild---------------"

      #生成测试报告
      test_xcov options

    end

    desc "use fastlane scan for Unit Test"
    lane :test_scan do |options|

      puts "---start fastlane scan---------------"
      UI.message("start fastlane scan")
      scan(
          workspace: "fastlaneDemo.xcworkspace",
          scheme: "fastlaneDemo",
          device: 'iPhone 7',
          code_coverage:true
          )
      UI.message("success fastlane scan")
      puts "---success fastlane scan---------------"

      #生成测试报告
      test_xcov options

    end

    lane :test_xcov do |options|

      is_legacy_support = true
      if Float(options[:xcode]) > 9.2
        is_legacy_support = false
      end

      puts "---start xcov---------------"
      UI.message("start xcov")
      xcov(
          workspace: "fastlaneDemo.xcworkspace",
          scheme: "fastlaneDemo",
          html_report: "true",
          json_report: "true",
          legacy_support: is_legacy_support,
          output_directory: "testReports"
      )
      UI.message("success xcov")
      puts "---success xcov---------------"

      file = File.read(File.absolute_path("../testReports/report.json"))
      if file
          data = JSON.parse(file)
          UI.message(data)
          UI.message(data["coverage"])
      else
          UI.error("Unable open file!")
          return
      end

    end
  
end
